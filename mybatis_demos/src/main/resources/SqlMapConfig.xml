<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!-- 加载属性文件 -->
    <!-- 注意点：
    MyBatis 将按照下面的顺序来加载属性：
    	在 properties 元素体内定义的属性首先被读取。 
    	然后会读取properties 元素中resource或 url 加载的属性，它会覆盖已读取的同名属性。 
                       最后读取parameterType传递的属性，它会覆盖已读取的同名属性。
                       
	 建议：
		不要在properties元素体内添加任何属性值，只将属性值定义在properties文件中。
		在properties文件中定义属性名要有一定的特殊性，如：XXXXX.XXXXX.XXXX，防止和parameterType的属性进行冲突。
     -->
    <properties resource="db.properties"></properties>
    <typeAliases>
       <!-- 针对单个别名，type类型的全路径，alias：别名 -->
       <!--  <typeAlias type="com.zhihao.miao.pojo.User" alias="user"/> -->
       <!-- 指定报名，mybatis自动扫描po类，别名是此类名的首字母大写或者小写的类名 -->
       <package name="com.zhihao.miao.pojo"/>
    </typeAliases>
	<!-- 和spring整合后 environments配置将废除-->
	<environments default="development">
		<environment id="development">
		<!-- 使用jdbc事务管理，事务控制由mybatis-->
			<transactionManager type="JDBC" />
		<!-- 数据库连接池，由mybatis管理-->
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.driver}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
			</dataSource>
		</environment>
	</environments>
	<!-- 加载 映射文件 -->
	<mappers>
		<mapper resource="sqlmap/User.xml"/>
		
		<!--通过resource方法一次加载一个映射文件 -->
		<!-- <mapper resource="mapper/UserMapper.xml"/> -->
		
		<!-- 通过mapper接口加载单个 映射文件
		遵循一些规范：需要将mapper接口类名和mapper.xml映射文件名称保持一致，且在一个目录 中
		上边规范的前提是：使用的是mapper代理方法
		 -->
		<mapper class="com.zhihao.miao.mapper.UserMapper"/> 
		
		<!-- 批量加载mapper
		指定mapper接口的包名，mybatis自动扫描包下边所有mapper接口进行加载
		遵循一些规范：需要将mapper接口类名和mapper.xml映射文件名称保持一致，且在一个目录 中
		上边规范的前提是：使用的是mapper代理方法
		 -->
		<!-- <package name="com.zhihao.miao.mapper"/> -->
	</mappers>
	
</configuration>
